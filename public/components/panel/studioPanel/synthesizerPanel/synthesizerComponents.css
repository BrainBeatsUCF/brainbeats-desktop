:root {
  --synth-visualizer-length: 275px;
  --synth-visualizer-radius: 137.5px;
}

.SynthModelsContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

.SynthModelCard {
  position: relative;
  background-color: rgb(10, 48, 89);
  box-sizing: border-box;
  margin: 10px;
  border-radius: 50%;
  cursor: pointer;
}

.SynthModelCardImage {
  position: relative;
  border-radius: 50%;
  height: 100%;
  width: 100%;
}

/* Tooltip text */
.Tooltip .TooltipText {
  position: relative;
  top: -20%;
  left: 50%;
  visibility: hidden;
  width: 125px;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  position: absolute;
  z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.Tooltip:hover .TooltipText {
  visibility: visible;
}

/* Styles for Processing Stages */

.FlexWithCenteredContent {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.SynthProcessingMessage {
  color: #fff;
  font-size: 1em;
  user-select: none;
  margin: auto 10px;
}

.SynthVisualizer {
  min-width: var(--synth-visualizer-length);
  max-width: var(--synth-visualizer-length);
  min-height: var(--synth-visualizer-length);
  max-height: var(--synth-visualizer-length);
  border-radius: var(--synth-visualizer-radius);
  background-color: rgb(2, 52, 104);
  border: solid 1px rgba(68, 68, 76, 0.5);
}

@keyframes synthAnimate {
  to {
    border-color: rgb(139, 125, 230);
    box-shadow: 0 0 40px #7eb1e8;
  }
}

.SynthAnimationStyle {
  border: 1px solid transparent;
  border-color: rgba(68, 68, 76, 0.5);
  animation: synthAnimate 1s infinite alternate;
  transition: border 1s linear, box-shadow 1s linear;
}

.SynthResultsContainer {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.SynthResultsContainerTitle {
  margin: 7px 0px;
  font-size: 1.4em;
  text-align: center;
  width: 100%;
  display: none;
}

.SynthSubtitleContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
}

.SynthSubtitle {
  color: #fff;
  font-size: 1.2em;
  margin: 5px 0px;
  text-align: center;
  width: calc(100% - 80px - 80px);
}

.SynthSubtitleShort {
  width: 80px;
  max-width: 80px;
}

.SynthSampleCardContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.SynthSampleCard {
  display: flex;
  flex-direction: row;
  max-width: 275px;
  width: 275px;
  padding: 8px;
  align-items: center;
  justify-content: space-between;
  background-color: rgb(44, 45, 51);
  border: solid 0.8px rgb(164, 181, 199);
  border-radius: 8px;
  box-shadow: 0 0 2px rgb(200, 205, 211);
  box-sizing: border-box;
  margin: 5px 0px;
  margin-right: 20px;
}

.SynthSampleCardSelected {
  background-color: rgb(64, 82, 57);
}

.SynthSampleCardTitle {
  background-color: rgba(0, 0, 0, 0);
  color: #fff;
  border: none;
  font-size: 0.9em;
  box-sizing: border-box;
}

.SynthSampleCardButton {
  max-width: 30px;
  max-height: 30px;
}

.SynthSamplesActionInput {
  color: #fff;
  border: none;
  border-radius: 8px;
  font-size: 1em;
  box-sizing: border-box;
  margin: 5px 0px;
  width: 100%;
  height: 36px;
}

.SynthSamplesActionInput:hover {
  filter: brightness(0.6);
  cursor: pointer;
}

/* Custom Checkmark */
.CheckmarkContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 80px;
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: -6px;
  left: 5px;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a green background */
.container input:checked ~ .checkmark {
  background-color: #4b9c42;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
